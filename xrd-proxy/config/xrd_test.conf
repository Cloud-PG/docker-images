 

# Tell everyone who the manager is

#

all.manager rdtr_cache:rdtr_port_cmsd

 

# The redirector and all cmsd’s export /data red-only with the stage option. The stage

# option requests that if the file isn’t found in the cluster the redirector should send

# the client to a PFC server with enough space to cache the file.

#

all.export / stage r/o

 

# Configuration is different for the redirector, the server cmsd, and

# for the server xrootd. We break those out in the if-else-fi clauses.

#
if redirector

 

all.role manager

 

# Export with stage option - if the file isn’t found in the cluster the

# redirector sends the client to a PFC server with enough free space.

#

all.export /data stage r/o

 

# Server’s cmsd configuration – all PFC’s are virtual data servers

#

else if exec cmsd
 

all.role server

 

# Export with stage option - this tells manager cmsd we can pull files from the origin

#

all.export / stage r/o

 

# The cmsd uses the standard oss plug-in to locate files in the cache.

# oss.localroot directive should be the same as for the server.

#

oss.localroot /data/xrd

 

# Server’s xrootd configuration – all PFC’s are virtual data servers

#

else

 

all.role server

 

# For xrootd, load the proxy plugin and the disk caching plugin.

#

ofs.osslib   libXrdPss.so

pss.cachelib libFileCache.so

 

# The server needs to write to disk, stage not relevant

#

all.export / rw

 

# Tell the proxy where the data is coming from (arbitrary).

#

pss.origin rdtr_global:rdtr_global_port
xrd.protocol http:8000 libXrdHttp.so
 

# Tell the PFC’s where the disk cache resides (arbitrary).

#

oss.localroot /data/xrd

 

# Tell the PFC’s available RAM

#

pfc.ram 2g

 

fi